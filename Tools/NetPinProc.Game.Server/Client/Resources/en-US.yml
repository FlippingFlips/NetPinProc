BallSearch:
 Driver: Set a value higher than 0 to pulse the coil when a ball search is triggered
 SwitchReset: Reset search. set to `open` or `closed`, this will reset the ball search timer
 SwitchStop: Stop search. set to `open` or `closed`, this will stop the ball search
MachineItem:
 BoardId: Id number of connected board, starting at index 0
 Connection: Connection fitting name (not required, for your reference only)
 ItemType: Set item types on switches to program switch rules to a coil. Some coils like `bumpers, slings, flippers` you will want the hardware to fire the coil automatically, to be faster than software.
 Name: Names should be unique. Switch names should start lower cased and using "_" instead of spaces. Leave switch names to `not_used*` if not using them.
 Number: The number can be a string as used in older P-ROC boards, see other machine.json's
 Position: The X pos and Y pos of the item on or under the playfield
 Tags: Machine items can be tagged with single names or comma separated.
SwitchItemTypes:
 Flipper: flipper| set all flippers ItemType to flipper to create switch rules and map any flipper coils with the same name
 Bumper: bumper| set all Bumpers and Slingshots to create switch rules and map any coils with the same name as the switch
Pages:
 Summary: Use this page to add, edit and remove {item} from the database.
 Adjustments: Adjustments with options and default values. These can be read from the game / modes.
Steppers:
 IsStepper1: Sets the PDLEd to stepper 1. 2 steppers per board
 Stepper: Stepper
 StopSwitch: A switch to stop the stepper from a mode callback
 Speed: Stepper ticks per half period. Can be changed in game with SetSpeed
 Voltage: Voltage of the Stepper for reference
SvgTool:
 FileUpload: Select an SVG file exported from Inkscape. The document should have layers that contain machine items.
  The database machine items are updated after file is selected
 NoLayers: No layers found in file
 WhatFor: This tool is for extracting and updating database positions from an svg document. Elements named by machine item and within layers named by the type. <br><br>
   You can generate an initial document with layers from the generate template, `/machine/tools/playfield/generatesvg`<br>
   By keeping the database positions updated and correct, other tools and the display can use them. <br><br>
   eg; Lampshow creators, test views, switch windows <br><br>
 HowToSetup: Create an new document in Inkscape and make the document size match your playfield. <br> Add groups you want to extract. <br><br> Inside the groups create shapes or paths and name them.
 Naming: Name the items in the groups with the Name from your configuration, for example, for a SWITCHES group; `coin1` <br><br>
 Layers: Each panel represents a layer from the svg file with your extracted machine items
 UpdateMachine: Update positions in the database from items found in the svg
TagsLamp:
 shootAgain: used in ball saves, extra balls
TagsSwitch:
 trough: tag your trough switches with `trough` and the last eject switch with `troughEject`
 shooterLane: tag the plunger lane switch with `shooterLane` to interact with the trough and ball saves
 door: handles door switches for service modes and machine monitor
 early: early ball save switches. `outlaneL,outlaneR`
Playfield:
 GenerateSvgTitle: Generate SVG from machine items
 GenerateSvgTemplate: <br> Generating a document from a template with pre made layers will add each machine item you have into the layer<br><br>
  Grouped layers are named matching the collections in the machine. eg SWITCHES, LEDS <br><br>
  This template is Stern sized at 514x1066mm | 20.25x42". You can change the template this to match the games playfield.
  The template file can be found in the public folder <code>`wwwroot/playfield/playfieldtemplate.svg`</code> <br><br>
  Generating a file will use any position that is already set on the item or it will be set at 0,0. The center point is saved of Circles and rects, rects in Inkscape start at top left of the element.<br><br>
  The generated export can be downloaded and loaded into Inkscape where you would move your items around the playfield and set positions and save it <br><br>
  The database positions can then be updated from your edits in <pre>Machine Pos from SVG</pre><br><br>